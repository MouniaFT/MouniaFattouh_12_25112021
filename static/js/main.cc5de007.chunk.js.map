{"version":3,"sources":["images/logo.svg","components/Header.js","images/swimmingIcon.svg","images/yogaIcon.svg","images/bikingIcon.svg","images/bodybuildingIcon.svg","components/FooterSidBar.js","components/Welcome.js","components/CustomToolTipActivity.js","components/ChartActivity.js","mocks/data-user.js","components/CardInfos.js","images/calories.svg","images/protein.svg","images/carbs.svg","images/fat.svg","components/ChartRadarPerformance.js","components/CustomToolTipAverage.js","components/ChartLineAverage.js","service.js","components/ChartScore.js","contexts/DataMockContext.js","pages/Dashboard.js","pages/Home.js","App.js","index.js"],"names":["Header","className","to","src","logo","alt","FooterSidBar","yogaIcon","swimmingIcon","bikingIcon","bodybuildingIcon","Welcome","user","userInfos","firstName","prototype","PropTypes","array","CustomToolTipActivity","active","payload","length","value","bool","ChartActivity","ResponsiveContainer","width","height","BarChart","data","sessions","margin","top","right","left","bottom","barGap","barSize","CartesianGrid","vertical","strokeDasharray","XAxis","dy","dataKey","tickLine","stroke","tickFormatter","day","Date","getDate","YAxis","tickCount","axisLine","orientation","Tooltip","content","cursor","fill","Legend","style","color","verticalAlign","iconType","iconSize","align","Bar","name","radius","userData","id","lastName","age","todayScore","keyData","calorieCount","proteinCount","carbohydrateCount","lipidCount","score","userActivity","userId","kilogram","calories","userAverage","sessionLength","userPerformance","kind","CardInfos","image","unit","type","string","number","RadarChartPerformance","RadarChart","cx","cy","outerRadius","PolarGrid","radialLines","PolarAngleAxis","tick","fontSize","fontWeight","Radar","CustomTooltipAverage","ChartLineAverage","LineChart","tickMargin","domain","hide","offset","stopColor","Line","dot","strokeWidth","activeDot","r","UserInfosFormatter","userInfosFormatted","fetchUserInfos","a","fetch","response","json","result","formatter","format","fetchUserActivity","fetchUserAverage","fetchUserPerformance","ChartScore","RadialBarChart","innerRadius","startAngle","endAngle","RadialBar","minAngle","cornerRadius","angleAxisId","DataMockContext","createContext","DataMockContextProvider","children","useState","isDataMock","setIsDataMock","Provider","Dashboard","dataInfos","setDataInfos","dataActivity","setDataActivity","dataAverage","setDataAverage","dataPerformance","setDataPerformance","useParams","isLoading","setIsLoading","isError","setIsError","useContext","useEffect","find","parseInt","getData","resultInfos","resultActivity","resultAverage","resultPerformance","protein","carbs","fat","Home","htmlFor","defaultChecked","onChange","App","exact","path","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.cc5de007.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.83741486.svg\";","import logo from '../images/logo.svg'\nimport { Link } from 'react-router-dom'\n\n/**\n * A component to display Header\n * @returns { React.Component }\n */\nfunction Header() {\n  return (\n    <div className=\"header\">\n      <div className=\"container container-l\">\n        <Link to=\"/\" className=\"header_logo\">\n          <img src={logo} alt=\"logo\" />\n        </Link>\n        <nav className=\"header_nav\">\n          <Link to=\"/\" className=\"nav-item\">\n            Accueil\n          </Link>\n          <Link to=\"/\" className=\"nav-item\">\n            Profil\n          </Link>\n          <Link to=\"/\" className=\"nav-item\">\n            Réglage\n          </Link>\n          <Link to=\"/\" className=\"nav-item\">\n            Communauté\n          </Link>\n        </nav>\n      </div>\n    </div>\n  )\n}\n\nexport default Header\n","export default __webpack_public_path__ + \"static/media/swimmingIcon.e26dba43.svg\";","export default __webpack_public_path__ + \"static/media/yogaIcon.6c31a277.svg\";","export default __webpack_public_path__ + \"static/media/bikingIcon.d516c0e8.svg\";","export default __webpack_public_path__ + \"static/media/bodybuildingIcon.7c04704d.svg\";","import { Link } from 'react-router-dom'\nimport swimmingIcon from '../images/swimmingIcon.svg'\nimport yogaIcon from '../images/yogaIcon.svg'\nimport bikingIcon from '../images/bikingIcon.svg'\nimport bodybuildingIcon from '../images/bodybuildingIcon.svg'\nimport React from 'react'\n\n/**\n * A component to display Sidbar\n * @returns { React.Component }\n */\nfunction FooterSidBar() {\n  return (\n    <footer className=\"footer\">\n      <div className=\"footer_content\">\n        <nav className=\"footer_nav\">\n          <Link to=\"/\" className=\"footer_icon\">\n            <img src={yogaIcon} alt=\"yogaIcon\" />\n          </Link>\n          <Link to=\"/\" className=\"footer_icon\">\n            <img src={swimmingIcon} alt=\"swimmingIcon\" />\n          </Link>\n          <Link to=\"/\" className=\"footer_icon\">\n            <img src={bikingIcon} alt=\"bikingIcon\" />\n          </Link>\n          <Link to=\"/\" className=\"footer_icon\">\n            <img src={bodybuildingIcon} alt=\"bodybuildingIcon\" />\n          </Link>\n        </nav>\n        <p className=\"footer_copiryght\">Copiryght, SportSee 2020</p>\n      </div>\n    </footer>\n  )\n}\n\nexport default FooterSidBar\n","import PropTypes from 'prop-types'\n\n/**\n * A component to display firstName of user\n * @param { array } user data of user\n * @returns { React.Component }\n */\nfunction Welcome({ user }) {\n  return (\n    <section className=\"welcome\">\n      <h1 className=\"welcome_title\">\n        Bonjour\n        <span className=\"title-firstname\">{user.userInfos.firstName}</span>\n      </h1>\n      <p className=\"welcome_para\">\n        Félicitation ! Vous avez explosé vos objectifs hier 👏\n      </p>\n    </section>\n  )\n}\n\nWelcome.prototype = {\n  user: PropTypes.array,\n}\n\nexport default Welcome\n","import PropTypes from 'prop-types'\n\n/**\n * A component to display the tooltip on hover in chartActivity\n * @param { boolean } active\n * @param { array } payload\n * @returns { React.Component }\n */\nfunction CustomToolTipActivity({ active, payload }) {\n  if (active && payload && payload.length) {\n    return (\n      <div className=\"custom-tooltip\">\n        <p className=\"custom-tooltip-text\">{`${payload[0].value}kg`}</p>\n        <p className=\"custom-tooltip-text\">{`${payload[1].value}kCal`}</p>\n      </div>\n    )\n  }\n  return null\n}\n\nCustomToolTipActivity.prototype = {\n  active: PropTypes.bool,\n  payload: PropTypes.array,\n}\n\nexport default CustomToolTipActivity\n","import {\n  BarChart,\n  Bar,\n  XAxis,\n  YAxis,\n  CartesianGrid,\n  Tooltip,\n  Legend,\n  ResponsiveContainer,\n} from 'recharts'\nimport CustomToolTipActivity from './CustomToolTipActivity.js'\nimport PropTypes from 'prop-types'\nimport React from 'react'\n\n/**\n * A component to display calories burned and kilograms per day\n * @param { array } user data of user\n * @returns { React.Component }\n */\nfunction ChartActivity({ user }) {\n  /**\n   * format the date to display only the day number\n   * @param { String } day\n   * @returns { Number }\n   */\n  function getDayFromDate(day) {\n    const date = new Date(day)\n    return date.getDate()\n  }\n\n  return (\n    <div className=\"chart_activity\">\n      <h2 className=\"chart_activity_title\">Activité quotidienne</h2>\n      <ResponsiveContainer width=\"100%\" height={320}>\n        <BarChart\n          data={user?.sessions}\n          margin={{ top: 70, right: 25, left: 25, bottom: 25 }}\n          barGap={8}\n          barSize={7}\n        >\n          <CartesianGrid vertical={false} strokeDasharray=\"3 3\" />\n          <XAxis\n            dy={15}\n            dataKey=\"day\"\n            tickLine={false}\n            stroke=\"#9B9EAC\"\n            tickFormatter={getDayFromDate}\n          />\n          <YAxis\n            tickCount={3}\n            axisLine={false}\n            tickLine={false}\n            orientation=\"right\"\n            stroke=\"#9B9EAC\"\n          />\n          <Tooltip\n            content={<CustomToolTipActivity />}\n            cursor={{ fill: 'rgba(196, 196, 196, 0.5)' }}\n          />\n          <Legend\n            style={{ color: '#74798C' }}\n            verticalAlign=\"top\"\n            iconType=\"circle\"\n            iconSize={8}\n            align=\"right\"\n          />\n          <Bar\n            name=\"Poids (kg)\"\n            dataKey=\"kilogram\"\n            fill=\"#282D30\"\n            radius={[3, 3, 0, 0]}\n          />\n          <Bar\n            name=\"Calories brûlées (kCal)\"\n            dataKey=\"calories\"\n            fill=\"#E60000\"\n            radius={[3, 3, 0, 0]}\n          />\n        </BarChart>\n      </ResponsiveContainer>\n    </div>\n  )\n}\n\nChartActivity.prototype = {\n  user: PropTypes.array,\n}\nexport default ChartActivity\n","export const userData = [\n  {\n    id: 12,\n    userInfos: {\n      firstName: 'Karl',\n      lastName: 'Dovineau',\n      age: 31,\n    },\n    todayScore: 0.12,\n    keyData: {\n      calorieCount: 1930,\n      proteinCount: 155,\n      carbohydrateCount: 290,\n      lipidCount: 50,\n    },\n  },\n  {\n    id: 18,\n    userInfos: {\n      firstName: 'Cecilia',\n      lastName: 'Ratorez',\n      age: 34,\n    },\n    score: 0.3,\n    keyData: {\n      calorieCount: 2500,\n      proteinCount: 90,\n      carbohydrateCount: 150,\n      lipidCount: 120,\n    },\n  },\n]\n\nexport const userActivity = [\n  {\n    userId: 12,\n    sessions: [\n      {\n        day: '2020-07-01',\n        kilogram: 80,\n        calories: 240,\n      },\n      {\n        day: '2020-07-02',\n        kilogram: 80,\n        calories: 220,\n      },\n      {\n        day: '2020-07-03',\n        kilogram: 81,\n        calories: 280,\n      },\n      {\n        day: '2020-07-04',\n        kilogram: 81,\n        calories: 290,\n      },\n      {\n        day: '2020-07-05',\n        kilogram: 80,\n        calories: 160,\n      },\n      {\n        day: '2020-07-06',\n        kilogram: 78,\n        calories: 162,\n      },\n      {\n        day: '2020-07-07',\n        kilogram: 76,\n        calories: 390,\n      },\n    ],\n  },\n  {\n    userId: 18,\n    sessions: [\n      {\n        day: '2020-07-01',\n        kilogram: 70,\n        calories: 240,\n      },\n      {\n        day: '2020-07-02',\n        kilogram: 69,\n        calories: 220,\n      },\n      {\n        day: '2020-07-03',\n        kilogram: 70,\n        calories: 280,\n      },\n      {\n        day: '2020-07-04',\n        kilogram: 70,\n        calories: 500,\n      },\n      {\n        day: '2020-07-05',\n        kilogram: 69,\n        calories: 160,\n      },\n      {\n        day: '2020-07-06',\n        kilogram: 69,\n        calories: 162,\n      },\n      {\n        day: '2020-07-07',\n        kilogram: 69,\n        calories: 390,\n      },\n    ],\n  },\n]\n\nexport const userAverage = [\n  {\n    userId: 12,\n    sessions: [\n      {\n        day: 1,\n        sessionLength: 30,\n      },\n      {\n        day: 2,\n        sessionLength: 23,\n      },\n      {\n        day: 3,\n        sessionLength: 45,\n      },\n      {\n        day: 4,\n        sessionLength: 50,\n      },\n      {\n        day: 5,\n        sessionLength: 0,\n      },\n      {\n        day: 6,\n        sessionLength: 0,\n      },\n      {\n        day: 7,\n        sessionLength: 60,\n      },\n    ],\n  },\n  {\n    userId: 18,\n    sessions: [\n      {\n        day: 1,\n        sessionLength: 30,\n      },\n      {\n        day: 2,\n        sessionLength: 40,\n      },\n      {\n        day: 3,\n        sessionLength: 50,\n      },\n      {\n        day: 4,\n        sessionLength: 30,\n      },\n      {\n        day: 5,\n        sessionLength: 30,\n      },\n      {\n        day: 6,\n        sessionLength: 50,\n      },\n      {\n        day: 7,\n        sessionLength: 50,\n      },\n    ],\n  },\n]\n\nexport const userPerformance = [\n  {\n    userId: 12,\n    kind: {\n      1: 'cardio',\n      2: 'energy',\n      3: 'endurance',\n      4: 'strength',\n      5: 'speed',\n      6: 'intensity',\n    },\n    data: [\n      {\n        value: 80,\n        kind: 1,\n      },\n      {\n        value: 120,\n        kind: 2,\n      },\n      {\n        value: 140,\n        kind: 3,\n      },\n      {\n        value: 50,\n        kind: 4,\n      },\n      {\n        value: 200,\n        kind: 5,\n      },\n      {\n        value: 90,\n        kind: 6,\n      },\n    ],\n  },\n  {\n    userId: 18,\n    kind: {\n      1: 'cardio',\n      2: 'energy',\n      3: 'endurance',\n      4: 'strength',\n      5: 'speed',\n      6: 'intensity',\n    },\n    data: [\n      {\n        value: 200,\n        kind: 1,\n      },\n      {\n        value: 240,\n        kind: 2,\n      },\n      {\n        value: 80,\n        kind: 3,\n      },\n      {\n        value: 80,\n        kind: 4,\n      },\n      {\n        value: 220,\n        kind: 5,\n      },\n      {\n        value: 110,\n        kind: 6,\n      },\n    ],\n  },\n]\n","import PropTypes from 'prop-types'\n\n/**\n * A component to display a card infos of calories, proteins, carbs or lipids data\n * @param { string } image icon card\n * @param { number } kayData\n * @param { string } unit\n * @param { string } type\n * @returns {React.Component}\n */\nfunction CardInfos({ image, keyData, unit, type }) {\n  return (\n    <div className=\"card_infos\">\n      <div className=\"card_infos_icon\">\n        <img src={image} alt=\"icon\" />\n      </div>\n      <div className=\"card_infos_text\">\n        <p className=\"card_infos_qte\">\n          {keyData}\n          {unit}\n        </p>\n        <p className=\"card_infos_type\">{type}</p>\n      </div>\n    </div>\n  )\n}\n\nCardInfos.prototype = {\n  image: PropTypes.string,\n  keyData: PropTypes.number,\n  unit: PropTypes.string,\n  type: PropTypes.string,\n}\n\nexport default CardInfos\n","export default __webpack_public_path__ + \"static/media/calories.5db5a3af.svg\";","export default __webpack_public_path__ + \"static/media/protein.c2859796.svg\";","export default __webpack_public_path__ + \"static/media/carbs.aa0e7466.svg\";","export default __webpack_public_path__ + \"static/media/fat.82c6cb9f.svg\";","import {\n  ResponsiveContainer,\n  RadarChart,\n  PolarGrid,\n  PolarAngleAxis,\n  Radar,\n} from 'recharts'\nimport PropTypes from 'prop-types'\n\n/**\n * A component to display the type of activity carried out in the form of a radar chart\n * @param { array } user data of user\n * @returns { React.Component }\n */\nfunction RadarChartPerformance({ user }) {\n  return (\n    <div className=\"chart_radar_performance chart-group-item\">\n      <ResponsiveContainer width=\"100%\" height={263}>\n        <RadarChart cx=\"50%\" cy=\"50%\" outerRadius=\"50%\" data={user?.data}>\n          <PolarGrid radialLines={false} />\n          <PolarAngleAxis\n            tick={{ fill: '#FFFFFF', fontSize: '12px', fontWeight: 500 }}\n            fill=\"white\"\n            dataKey=\"kind\"\n            // replace kind number with category kind\n            tickFormatter={(kind) => user?.kind[kind]}\n          />\n          <Radar dataKey=\"value\" fill=\"rgba(255, 1, 1, 0.7)\" />\n        </RadarChart>\n      </ResponsiveContainer>\n    </div>\n  )\n}\n\nRadarChartPerformance.prototype = {\n  user: PropTypes.array,\n}\n\nexport default RadarChartPerformance\n","import PropTypes from 'prop-types'\n\n/**\n * A component to display the tooltip on hover in chartLineAverage\n * @param { boolean } active\n * @param { array } payload\n * @returns { React.Component }\n */\nfunction CustomTooltipAverage({ active, payload }) {\n  if (active && payload && payload.length) {\n    return (\n      <div className=\"custom_tooltip_average\">\n        <p className=\"custom_tooltip_average_text\">{`${payload[0].value} min`}</p>\n      </div>\n    )\n  }\n\n  return null\n}\n\nCustomTooltipAverage.prototype = {\n  active: PropTypes.bool,\n  payload: PropTypes.array,\n}\n\nexport default CustomTooltipAverage\n","import {\n  LineChart,\n  Line,\n  XAxis,\n  YAxis,\n  Tooltip,\n  ResponsiveContainer,\n} from 'recharts'\nimport CustomTooltipAverage from './CustomToolTipAverage.js'\nimport PropTypes from 'prop-types'\n\n/**\n * A component to display the duration of the sessions per day\n * @param { array } user data of user\n * @returns { React.Component }\n */\nfunction ChartLineAverage({ user }) {\n  /**\n   * replace de number with the weekday\n   * @param { Number } day number of weekday\n   * @returns { String }\n   */\n  function getWeekDay(day) {\n    const week = { 1: 'L', 2: 'M', 3: 'M', 4: 'J', 5: 'V', 6: 'S', 7: 'D' }\n    return week[day]\n  }\n  return (\n    <div className=\"chart_line_average chart-group-item\">\n      <h2 className=\"chart_line_average_title\">Durée moyenne des sessions</h2>\n      <ResponsiveContainer width=\"100%\" height={263}>\n        <LineChart\n          width={500}\n          height={300}\n          data={user?.sessions}\n          margin={{\n            top: 5,\n            right: 10,\n            left: 10,\n            bottom: 40,\n          }}\n        >\n          <XAxis\n            dataKey=\"day\"\n            axisLine={false}\n            tickLine={false}\n            tickMargin={30}\n            tickFormatter={getWeekDay}\n            tick={{\n              fill: 'rgba(255, 255, 255, 0.5)',\n              fontWeight: 500,\n              fontSize: 12,\n            }}\n          />\n          <YAxis type=\"number\" domain={[0, 'dataMax + 60']} hide={true} />\n          <Tooltip content={<CustomTooltipAverage />} cursor={false} />\n          <defs>\n            <linearGradient id=\"linear\">\n              <stop offset=\"30%\" stopColor=\"rgba(255,255,255,0.4)\" />\n              <stop offset=\"100%\" stopColor=\"rgb(255,255,255)\" />\n            </linearGradient>\n          </defs>\n          <Line\n            type=\"natural\"\n            dataKey=\"sessionLength\"\n            dot={false}\n            stroke={' url(#linear)'}\n            strokeWidth={2}\n            activeDot={{\n              fill: 'white',\n              stroke: 'rgba(255, 255, 255, 0.2)',\n              strokeWidth: 8,\n              r: 2,\n            }}\n          />\n        </LineChart>\n      </ResponsiveContainer>\n    </div>\n  )\n}\n\nChartLineAverage.prototype = {\n  user: PropTypes.array,\n}\n\nexport default ChartLineAverage\n","export class UserInfosFormatter {\n  format(userInfos) {\n    const userInfosFormatted = { ...userInfos, ...userInfos.keyData }\n    delete userInfosFormatted.keyData\n    return userInfosFormatted\n  }\n}\n/**\n * Get UserInfos from API\n * @param {string} id\n * @returns {Object}\n */\nexport async function fetchUserInfos(id) {\n  const response = await fetch(`http://localhost:3000/user/${id}`)\n  const result = await response.json()\n  const formatter = new UserInfosFormatter()\n  return formatter.format(result.data)\n}\n\n/**\n * Get UserActivity from API\n * @param {string} id\n * @returns {Object}\n */\nexport async function fetchUserActivity(id) {\n  const response = await fetch(`http://localhost:3000/user/${id}/activity`)\n  const result = await response.json()\n  return result.data\n}\n\n/**\n * Get UserAverage from API\n * @param {string} id\n * @returns {Object}\n */\nexport async function fetchUserAverage(id) {\n  const response = await fetch(\n    `http://localhost:3000/user/${id}/average-sessions`\n  )\n  const result = await response.json()\n  return result.data\n}\n\n/**\n * Get UserPerformance from API\n * @param {string} id\n * @returns {Object}\n */\nexport async function fetchUserPerformance(id) {\n  const response = await fetch(`http://localhost:3000/user/${id}/performance`)\n  const result = await response.json()\n  return result.data\n}\n","import {\n  RadialBarChart,\n  RadialBar,\n  PolarAngleAxis,\n  ResponsiveContainer,\n} from 'recharts'\nimport PropTypes from 'prop-types'\n\n/**\n * A component to display the percentage of the average score\n * @param { array } user data of user\n * @returns { React.Component }\n */\nfunction ChartScore({ user }) {\n  const score = user?.score || user?.todayScore\n  return (\n    <div className=\"chart_score chart-group-item\">\n      <h2 className=\"chart_score_title\">Score</h2>\n      <p className=\"chart_score_percentage\">\n        <span>{score * 100}%</span>\n        <br />\n        de votre objectif\n      </p>\n      <ResponsiveContainer width=\"100%\" height={263}>\n        <RadialBarChart\n          cx=\"50%\"\n          cy=\"50%\"\n          outerRadius={100}\n          innerRadius={85}\n          barSize={10}\n          // Transform todayScore into a percentage\n          data={[{ score: score * 100 }]}\n          startAngle={80}\n          endAngle={430}\n          fill=\"#FF0000\"\n        >\n          <RadialBar dataKey=\"todayScore\" minAngle={15} cornerRadius={50} />\n          <PolarAngleAxis\n            type=\"number\"\n            domain={[0, 100]}\n            angleAxisId={0}\n            tick={false}\n          />\n        </RadialBarChart>\n      </ResponsiveContainer>\n    </div>\n  )\n}\n\nChartScore.prototype = {\n  user: PropTypes.array,\n}\n\nexport default ChartScore\n","import { createContext, useState } from 'react'\n\nexport const DataMockContext = createContext({})\n\nfunction DataMockContextProvider({ children }) {\n  const [isDataMock, setIsDataMock] = useState(false)\n\n  return (\n    <DataMockContext.Provider value={[isDataMock, setIsDataMock]}>\n      {children}\n    </DataMockContext.Provider>\n  )\n}\nexport default DataMockContextProvider\n","import Welcome from '../components/Welcome'\nimport ChartActivity from '../components/ChartActivity'\nimport { userData } from '../mocks/data-user.js'\nimport { userActivity } from '../mocks/data-user.js'\nimport { userAverage } from '../mocks/data-user.js'\nimport { userPerformance } from '../mocks/data-user.js'\nimport CardInfos from '../components/CardInfos'\nimport calories from '../images/calories.svg'\nimport protein from '../images/protein.svg'\nimport carbs from '../images/carbs.svg'\nimport fat from '../images/fat.svg'\nimport RadarChartPerformance from '../components/ChartRadarPerformance'\nimport ChartLineAverage from '../components/ChartLineAverage'\nimport React, { useState, useEffect, useContext } from 'react'\nimport {\n  fetchUserInfos,\n  fetchUserActivity,\n  fetchUserAverage,\n  fetchUserPerformance,\n} from '../service'\nimport ChartScore from '../components/ChartScore'\nimport { useParams } from 'react-router-dom'\nimport { DataMockContext } from '../contexts/DataMockContext'\nimport { UserInfosFormatter } from '../service'\n\n/**\n * A component to display Dashboard page of user\n * @returns { React.Component}\n */\nfunction Dashboard() {\n  const [dataInfos, setDataInfos] = useState([])\n  const [dataActivity, setDataActivity] = useState([])\n  const [dataAverage, setDataAverage] = useState([])\n  const [dataPerformance, setDataPerformance] = useState([])\n  const { id } = useParams()\n  const [isLoading, setIsLoading] = useState(true)\n  const [isError, setIsError] = useState(false)\n  const [isDataMock] = useContext(DataMockContext)\n\n  useEffect(() => {\n    // Use Data Mock\n    if (isDataMock) {\n      const formatter = new UserInfosFormatter()\n      setDataInfos(\n        formatter.format(userData.find((user) => user.id === parseInt(id)))\n      )\n      setDataActivity(userActivity.find((user) => user.userId === parseInt(id)))\n      setDataAverage(userAverage.find((user) => user.userId === parseInt(id)))\n      setDataPerformance(\n        userPerformance.find((user) => user.userId === parseInt(id))\n      )\n      setIsLoading(false)\n      return\n    }\n    // Use API\n    // Fetch data and save it in its state\n    const getData = async () => {\n      try {\n        const resultInfos = await fetchUserInfos(id)\n        setDataInfos(resultInfos)\n\n        const resultActivity = await fetchUserActivity(id)\n        setDataActivity(resultActivity)\n\n        const resultAverage = await fetchUserAverage(id)\n        setDataAverage(resultAverage)\n\n        const resultPerformance = await fetchUserPerformance(id)\n        setDataPerformance(resultPerformance)\n      } catch (error) {\n        setIsError(true)\n      }\n\n      setIsLoading(false)\n    }\n    getData()\n  }, [id, isDataMock])\n\n  if (isError) {\n    return (\n      <div className=\"container container-main\">\n        <p className=\"loading\">\n          Une erreur s'est produite lors de la requête serveur, veuillez essayer\n          avec les données mockées.\n        </p>\n      </div>\n    )\n  }\n\n  if (isLoading) {\n    return (\n      <div className=\"container container-main\">\n        <p className=\"loading\">Loading...</p>\n      </div>\n    )\n  }\n  return (\n    <main>\n      <div className=\"container container-main\">\n        <Welcome user={dataInfos} />\n        <div className=\"charts\">\n          <div className=\"charts_content\">\n            <ChartActivity user={dataActivity} />\n            <div className=\"charts-group\">\n              <ChartLineAverage user={dataAverage} />\n              <RadarChartPerformance user={dataPerformance} />\n              <ChartScore user={dataInfos} />\n            </div>\n          </div>\n          <aside>\n            <CardInfos\n              keyData={dataInfos.calorieCount}\n              image={calories}\n              unit=\"kcal\"\n              type=\"Calories\"\n            />\n            <CardInfos\n              keyData={dataInfos.proteinCount}\n              image={protein}\n              unit=\"g\"\n              type=\"Proteines\"\n            />\n            <CardInfos\n              keyData={dataInfos.carbohydrateCount}\n              image={carbs}\n              unit=\"g\"\n              type=\"Glucides\"\n            />\n            <CardInfos\n              keyData={dataInfos.lipidCount}\n              image={fat}\n              unit=\"g\"\n              type=\"Lipides\"\n            />\n          </aside>\n        </div>\n      </div>\n    </main>\n  )\n}\nexport default Dashboard\n","import { Link } from 'react-router-dom'\nimport React, { useContext } from 'react'\nimport { DataMockContext } from '../contexts/DataMockContext'\n\n/**\n * Create two radios to choose either API or DATA MOCK and two buttons to choose the user\n * @returns { React.Component}\n */\nfunction Home() {\n  const [isDataMock, setIsDataMock] = useContext(DataMockContext)\n\n  return (\n    <main className=\"home\">\n      <div className=\"container container-main\">\n        <div className=\"radio-btn\">\n          <label htmlFor=\"radio-one\" className=\"group\">\n            API\n            <input\n              id=\"radio-one\"\n              type=\"radio\"\n              value=\"api\"\n              name=\"data\"\n              defaultChecked={!isDataMock}\n              onChange={() => setIsDataMock(false)}\n            />\n            <span className=\"checkmark\"></span>\n          </label>\n\n          <label htmlFor=\"radio-two\" className=\"group\">\n            MOCK\n            <input\n              id=\"radio-two\"\n              type=\"radio\"\n              value=\"mock\"\n              name=\"data\"\n              defaultChecked={isDataMock}\n              onChange={() => setIsDataMock(true)}\n            />\n            <span className=\"checkmark\"></span>\n          </label>\n        </div>\n        <div className=\"link-user\">\n          <Link to={'/user/12'}>\n            <button className=\"link-user-btn\">utilisateur 12</button>\n          </Link>\n          <Link to={'/user/18'}>\n            <button className=\"link-user-btn\">utilisateur 18</button>\n          </Link>\n        </div>\n      </div>\n    </main>\n  )\n}\n\nexport default Home\n","import Header from './components/Header'\nimport { BrowserRouter as Router, Route, HashRouter } from 'react-router-dom'\nimport FooterSidBar from './components/FooterSidBar'\nimport Dashboard from './pages/Dashboard'\nimport Home from './pages/Home'\n\nfunction App() {\n  return (\n    <HashRouter>\n      <Header />\n      <Route exact path=\"/\">\n        <Home />\n      </Route>\n      <Route exact path=\"/user/:id\">\n        <Dashboard />\n      </Route>\n      <FooterSidBar />\n    </HashRouter>\n  )\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './styles/index.scss'\nimport App from './App'\nimport DataMockContextProvider from './contexts/DataMockContext'\n\nReactDOM.render(\n  <React.StrictMode>\n    <DataMockContextProvider>\n      <App />\n    </DataMockContextProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}